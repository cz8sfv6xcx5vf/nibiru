syntax = "proto3";

package nibiru.perp.v2;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "perp/v2/state.proto";
import "cosmos/base/v1beta1/coin.proto";

option go_package = "github.com/NibiruChain/nibiru/x/perp/types/v2";

// Query defines the gRPC querier service.
service Query {
  rpc QueryPosition(QueryPositionRequest) returns (QueryPositionResponse) {
    option (google.api.http).get = "/nibiru/perp/v2/position";
  }

  rpc QueryPositions(QueryPositionsRequest) returns (QueryPositionsResponse) {
    option (google.api.http).get = "/nibiru/perp/v2/positions";
  }

  // Queries the reserve assets in a given pool, identified by a token pair.
  rpc ModuleAccounts(QueryModuleAccountsRequest)
      returns (QueryModuleAccountsResponse) {
    option (google.api.http).get = "/nibiru/perp/v2/module_accounts";
  }
}

// ---------------------------------------- Positions
message QueryPositionsRequest { string trader = 1; }

message QueryPositionsResponse {
  repeated QueryPositionResponse positions = 1 [ (gogoproto.nullable) = false ];
}

// ---------------------------------------- Position

// QueryPositionRequest is the request type for the position of the x/perp
// module account.
message QueryPositionRequest {
  string pair = 1 [
    (gogoproto.customtype) =
        "github.com/NibiruChain/nibiru/x/common/asset.Pair",
    (gogoproto.nullable) = false
  ];

  string trader = 2;
}

message QueryPositionResponse {
  // The position as it exists in the blockchain state
  Position position = 1 [ (gogoproto.nullable) = false ];

  // The position's current notional value, if it were to be entirely closed (in
  // margin units).
  string position_notional = 2 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false
  ];

  // The position's unrealized PnL.
  string unrealized_pnl = 3 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false
  ];

  // margin ratio of the position based on the spot price
  string margin_ratio = 4 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false
  ];
}

// ----------------------------------------

message QueryModuleAccountsRequest {}

message QueryModuleAccountsResponse {
  repeated AccountWithBalance accounts = 1 [ (gogoproto.nullable) = false ];
}

message AccountWithBalance {
  string name = 1;
  string address = 2;

  repeated cosmos.base.v1beta1.Coin balance = 3 [
    (gogoproto.nullable) = false,
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"
  ];
}
