syntax = "proto3";

package nibiru.perp.v1;

import "gogoproto/gogo.proto";
import "cosmos/base/v1beta1/coin.proto";
import "cosmos_proto/cosmos.proto";
import "google/protobuf/duration.proto";

option go_package = "github.com/NibiruChain/nibiru/x/perp/v1/types";

enum PnLCalcOption {
  PNL_CALC_OPTION_UNSPECIFIED = 0;
  SPOT_PRICE = 1;
  TWAP = 2;
  ORACLE = 3;
}

enum PnLPreferenceOption {
  PNL_PREFERENCE_UNSPECIFIED = 0;
  MAX = 1;
  MIN = 2;
}

enum MarginCalculationPriceOption {
  MARGIN_CALCULATION_PRICE_OPTION_UNSPECIFIED = 0;
  SPOT = 1;
  INDEX = 2;
  MAX_PNL = 3;
}

message Params {
  // stopped identifies if the perp exchange is stopped or not
  bool stopped = 1;

  // FeePoolFeeRatio is the ratio transferred to the the fee pool
  string fee_pool_fee_ratio = 3 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false
  ];

  // EcosystemFundFeeRatio is the ratio transferred to the PerpEF.
  string ecosystem_fund_fee_ratio = 4 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false
  ];

  // LiquidationFeeRatio is the percentage of liquidated position that will be
  // given to out as a reward. Half of the liquidation fee is given to the
  // liquidator, and the other half is given to the ecosystem fund.
  string liquidation_fee_ratio = 5 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false
  ];

  // PartialLiquidationRatio is the share we try to liquidate if the margin is
  // higher than liquidation fee
  string partial_liquidation_ratio = 6 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false
  ];

  // specifies the interval on which the funding rate is updated
  string funding_rate_interval = 7;

  // amount of time to look back for TWAP calculations
  google.protobuf.Duration twap_lookback_window = 8 [
    (gogoproto.nullable) = false,
    (gogoproto.stdduration) = true,
    (gogoproto.jsontag) = "twap_lookback_window,omitempty",
    (gogoproto.moretags) = "yaml:\"twap_lookback_window\""
  ];

  // whitelisted_liquidators defines the list of addresses
  // which are allowed to liquidate a position.
  repeated string whitelisted_liquidators = 9;
}

// Position identifies and records information on a user's position on one of
// the virtual liquidity pools.
message Position {
  // address identifies the address owner of this position
  string trader_address = 1;

  // pair identifies the pair associated with this position
  string pair = 2 [
    (gogoproto.customtype) =
        "github.com/NibiruChain/nibiru/x/common/asset.Pair",
    (gogoproto.nullable) = false
  ];

  // Position size.
  string size = 3 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false
  ];

  // Amount of margin remaining in the position.
  string margin = 4 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false
  ];

  // OpenNotional is the quote denom value of the position when opening.
  // Used to calculate PnL.
  string open_notional = 5 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false
  ];

  // The most recent cumulative premium fraction this position has.
  // Used to calculate the next funding payment.
  string latest_cumulative_premium_fraction = 6 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false
  ];

  // BlockNumber is the last block number when this position was updated.
  int64 block_number = 7;
}

message PairMetadata {
  string pair = 1 [
    (gogoproto.customtype) =
        "github.com/NibiruChain/nibiru/x/common/asset.Pair",
    (gogoproto.nullable) = false
  ];

  // Latest cumulative premium fraction for a given pair.
  // Calculated once per funding rate interval.
  // A premium fraction is the difference between mark and index, divided by the
  // number of payments per day. (mark - index) / # payments in a day
  string latest_cumulative_premium_fraction = 2 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false
  ];
}

message PrepaidBadDebt {
  string denom = 1;

  string amount = 2 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = false
  ];
}

// PoolMetrics is a structure that displays a snapshot of perp metrics for each
// pair.
message Metrics {
  // Pair identifier for the two assets. Always in format 'base:quote'
  string pair = 1 [
    (gogoproto.customtype) =
        "github.com/NibiruChain/nibiru/x/common/asset.Pair",
    (gogoproto.nullable) = false
  ];

  // Sum of all active position sizes for the pair.
  string net_size = 2 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false
  ];

  // Total notional volume for the pair.
  string volumeQuote = 3 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false
  ];

  // Total size volume for the pair.
  string volumeBase = 4 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false
  ];
}