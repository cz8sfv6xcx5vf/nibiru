syntax = "proto3";

package nibiru.perp.v1;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "perp/v1/state.proto";

option go_package="github.com/NibiruChain/nibiru/x/perp/types";

// Query defines the gRPC querier service.
service Query {
  // Parameters queries the parameters of the x/perp module.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/nibiru/perp/params";
  }

  rpc TraderPosition(QueryTraderPositionRequest) returns (QueryTraderPositionResponse) {
    option (google.api.http).get = "/nibiru/perp/trader_position";
  }
}

// ---------------------------------------- Params

// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}

// ---------------------------------------- TraderPosition

/* QueryTraderPositionRequest is the request type for the position of the 
   x/perp module account. */
message QueryTraderPositionRequest {
  string token_pair = 1;
  string trader = 2;
}

message QueryTraderPositionResponse {
  Position position = 1;
}

// ---------------------------------------- OtherQuery