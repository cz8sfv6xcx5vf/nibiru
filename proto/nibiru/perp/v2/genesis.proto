syntax = "proto3";

package nibiru.perp.v2;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/v1beta1/coin.proto";
import "nibiru/perp/v2/state.proto";

option go_package = "github.com/NibiruChain/nibiru/x/perp/v2/types";

// GenesisState defines the perp module's genesis state.
// Thge genesis state is used not only to start the network but also useful for
// exporting and importing state during network upgrades.
message GenesisState {
  repeated Market markets = 2 [ (gogoproto.nullable) = false ];

  repeated AMM amms = 3 [ (gogoproto.nullable) = false ];

  repeated Position positions = 4 [ (gogoproto.nullable) = false ];

  repeated ReserveSnapshot reserve_snapshots = 5
      [ (gogoproto.nullable) = false ];

  uint64 dnr_epoch = 6;

  repeated TraderVolume trader_volumes = 7 [ (gogoproto.nullable) = false ];

  message TraderVolume {
    string trader = 1;
    uint64 epoch = 2;
    string volume = 3 [
      (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
      (gogoproto.nullable) = false
    ];
  }

  repeated GenesisMarketLastVersion market_last_versions = 8
      [ (gogoproto.nullable) = false ];
}

// GenesisMarketLastVersion is the last version including pair only used for
// genesis
message GenesisMarketLastVersion {
  string pair = 1 [
    (gogoproto.customtype) =
        "github.com/NibiruChain/nibiru/x/common/asset.Pair",
    (gogoproto.nullable) = false
  ];

  uint64 version = 2;
}
