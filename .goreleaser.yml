project_name: nibid

env:
  - CGO_ENABLED=1

builds:
  - id: darwin
    main: ./cmd/nibid
    binary: nibid
    hooks:
      pre:
        - wget https://github.com/CosmWasm/wasmvm/releases/download/v1.2.4/libwasmvmstatic_darwin.a -O /osxcross/target/SDK/MacOSX12.0.sdk/usr/lib/libwasmvmstatic_darwin.a
        - wget https://github.com/NibiruChain/gorocksdb/releases/download/v8.1.1/include.8.1.1.tar.gz -O /root/include.8.1.1.tar.gz
        - tar -xf /root/include.8.1.1.tar.gz -C /osxcross/target/SDK/MacOSX12.0.sdk/usr/include/
        - wget https://github.com/NibiruChain/gorocksdb/releases/download/v8.1.1/librocksdb_8.1.1_darwin_all.tar.gz -O /root/librocksdb_8.1.1_darwin_all.tar.gz
        - tar -xf /root/librocksdb_8.1.1_darwin_all.tar.gz -C /osxcross/target/SDK/MacOSX12.0.sdk/usr/lib/
    goos:
      - darwin
    goarch:
      - amd64
      - arm64
    env:
      - CC=o64-clang
    flags:
      - -mod=readonly
      - -trimpath
    ldflags:
      - -s -w
      - -X github.com/cosmos/cosmos-sdk/version.Name=nibiru
      - -X github.com/cosmos/cosmos-sdk/version.AppName=nibid
      - -X github.com/cosmos/cosmos-sdk/version.Version={{ .Version }}
      - -X github.com/cosmos/cosmos-sdk/version.Commit={{ .Commit }}
      - -linkmode=external
      - -extldflags '-lrocksdb -lstdc++ -ldl -lz -lbz2'
    tags:
      - netgo
      - osusergo
      - ledger
      - static
      - static_wasm
      - rocksdb
      - grocksdb_no_link
    overrides:
      - goos: darwin
        goarch: arm64
        env:
          - CC=oa64-clang

  - id: linux
    main: ./cmd/nibid
    binary: nibid
    hooks:
      pre:
        - wget https://github.com/CosmWasm/wasmvm/releases/download/v1.2.4/libwasmvm_muslc.x86_64.a -O /usr/lib/x86_64-linux-gnu/libwasmvm_muslc.a
        - wget https://github.com/CosmWasm/wasmvm/releases/download/v1.2.4/libwasmvm_muslc.aarch64.a -O /usr/lib/aarch64-linux-gnu/libwasmvm_muslc.a
        - wget https://github.com/NibiruChain/gorocksdb/releases/download/v8.1.1/include.8.1.1.tar.gz -O /root/include.8.1.1.tar.gz
        - tar -xf /root/include.8.1.1.tar.gz -C /usr/include/
        - wget https://github.com/NibiruChain/gorocksdb/releases/download/v8.1.1/librocksdb_8.1.1_linux_amd64.tar.gz -O /root/librocksdb_8.1.1_linux_amd64.tar.gz
        - tar -xf /root/librocksdb_8.1.1_linux_amd64.tar.gz -C /usr/lib/x86_64-linux-gnu/
        - wget https://github.com/NibiruChain/gorocksdb/releases/download/v8.1.1/librocksdb_8.1.1_linux_arm64.tar.gz -O /root/librocksdb_8.1.1_linux_arm64.tar.gz
        - tar -xf /root/librocksdb_8.1.1_linux_arm64.tar.gz -C /usr/lib/aarch64-linux-gnu/
    goos:
      - linux
    goarch:
      - amd64
      - arm64
    env:
      - CC=x86_64-linux-gnu-gcc
    flags:
      - -mod=readonly
      - -trimpath
    ldflags:
      - -s -w
      - -X github.com/cosmos/cosmos-sdk/version.Name=nibiru
      - -X github.com/cosmos/cosmos-sdk/version.AppName=nibid
      - -X github.com/cosmos/cosmos-sdk/version.Version={{ .Version }}
      - -X github.com/cosmos/cosmos-sdk/version.Commit={{ .Commit }}
      - -X github.com/cosmos/cosmos-sdk/types.DBBackend=rocksdb
      - -linkmode=external
      - -extldflags '-static -lrocksdb -lstdc++ -lm -ldl -lpthread'
    tags:
      - netgo
      - osusergo
      - ledger
      - muslc
      - rocksdb
      - grocksdb_no_link
      - static
    overrides:
      - goos: linux
        goarch: arm64
        env:
          - CC=aarch64-linux-gnu-gcc

universal_binaries:
  - id: darwin

dockers:
  - image_templates:
      - "ghcr.io/nibiruchain/nibiru:{{ .Version }}-amd64"
    use: docker
    dockerfile: Dockerfile
    build_flag_templates:
      - "--platform=linux/amd64"

  - image_templates:
      - "ghcr.io/nibiruchain/nibiru:{{ .Version }}-arm64"
    use: docker
    goarch: arm64
    dockerfile: Dockerfile
    build_flag_templates:
      - "--platform=linux/arm64"

docker_manifests:
  - name_template: "ghcr.io/nibiruchain/nibiru:{{ .Version }}"
    image_templates:
      - "ghcr.io/nibiruchain/nibiru:{{ .Version }}-amd64"
      - "ghcr.io/nibiruchain/nibiru:{{ .Version }}-arm64"