// Code generated by MockGen. DO NOT EDIT.
// Source: x/vpool/types/expected_keepers.go

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	types "github.com/NibiruChain/nibiru/x/pricefeed/types"
	types0 "github.com/cosmos/cosmos-sdk/types"
	gomock "github.com/golang/mock/gomock"
)

// MockPriceKeeper is a mock of PriceKeeper interface.
type MockPriceKeeper struct {
	ctrl     *gomock.Controller
	recorder *MockPriceKeeperMockRecorder
}

// MockPriceKeeperMockRecorder is the mock recorder for MockPriceKeeper.
type MockPriceKeeperMockRecorder struct {
	mock *MockPriceKeeper
}

// NewMockPriceKeeper creates a new mock instance.
func NewMockPriceKeeper(ctrl *gomock.Controller) *MockPriceKeeper {
	mock := &MockPriceKeeper{ctrl: ctrl}
	mock.recorder = &MockPriceKeeperMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockPriceKeeper) EXPECT() *MockPriceKeeperMockRecorder {
	return m.recorder
}

// GetCurrentPrice mocks base method.
func (m *MockPriceKeeper) GetCurrentPrice(ctx types0.Context, token0, token1 string) (types.CurrentPrice, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCurrentPrice", ctx, token0, token1)
	ret0, _ := ret[0].(types.CurrentPrice)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetCurrentPrice indicates an expected call of GetCurrentPrice.
func (mr *MockPriceKeeperMockRecorder) GetCurrentPrice(ctx, token0, token1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCurrentPrice", reflect.TypeOf((*MockPriceKeeper)(nil).GetCurrentPrice), ctx, token0, token1)
}
